# Detector, scallop-only trained using netharn
#
# This pipeline assumes stereo imagery together in a composite image as input. The
# first 'splitting' process selects either the left or right side of the image to
# perform detection on. Replace 'split.left_image' with 'split.right_image' to
# perform detection on the other side.

# ============================== GLOBAL PROPERTIES =================================
# global pipeline config
#
config _pipeline:_edge
       :capacity                               5

# =============================== INPUT FRAME LIST =================================

include common_default_input.pipe

# ================================= CROP INPUTS ====================================
process split
  :: split_image
  :split_image:type                            ocv_horizontally

connect from input.image
        to   split.image

# =================================== DETECTOR =====================================
process detector
  :: image_object_detector
  :detector:type                               ocv_windowed

  block detector:ocv_windowed
    :detector:type                             netharn

    :mode                                      original_and_resized
    :chip_width                                512
    :chip_height                               512
    :chip_adaptive_thresh                      1200000

    block detector:netharn
      relativepath deployed =                  models/habcam_scallop_netharn.zip
    endblock
  endblock

connect from split.left_image
        to   detector.image

# ==================================== WRITER ======================================
process detector_writer
  :: detected_object_output

  # Type of file to output
  :file_name                                   scallop_netharn_detections.csv
  :writer:type                                 viame_csv

connect from detector.detected_object_set
        to   detector_writer.detected_object_set
connect from input.file_name
        to   detector_writer.image_file_name

# -- end of file --
